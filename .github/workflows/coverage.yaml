name: Smokeshow Pipeline

on:
  workflow_run:
    workflows: [Test Pipeline]
    types: [completed]

permissions:
  statuses: write

jobs:
  smokeshow:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]

    name: Smokeshow Pipeline
    timeout-minutes: 5
    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: üêç Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: üì¶ Create cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: üì¶ Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev CI=true VERBOSE=true

      - name: üì• Download coverage files
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          name: coverage-html
          path: htmlcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: üìä Upload coverage report
        run: smokeshow upload htmlcov
        env:
          SMOKESHOW_GITHUB_STATUS_DESCRIPTION: Coverage {coverage-percentage}
          SMOKESHOW_GITHUB_COVERAGE_THRESHOLD: 100
          SMOKESHOW_GITHUB_CONTEXT: coverage
          SMOKESHOW_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SMOKESHOW_GITHUB_PR_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
          SMOKESHOW_AUTH_KEY: ${{ secrets.SMOKESHOW_AUTH_KEY }}
