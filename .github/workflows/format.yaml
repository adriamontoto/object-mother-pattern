name: Format Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize]

permissions:
  contents: write

jobs:
  format:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]

    name: Format Pipeline - Python ${{ matrix.python-version }} on ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: 📦 Create cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev CI=true VERBOSE=true

      - name: 🏃 Run Formatter
        run: make format CI=true VERBOSE=true

      - name: 📤 Commit & Push Changes
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5
        with:
          add: .
          message: '🔨 refactor: run automatic formatter'
          commit: --signoff
          default_author: github_actions
