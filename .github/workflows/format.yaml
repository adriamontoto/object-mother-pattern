name: Format Pipeline

on:
  push:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  format:
    name: Format Pipeline - Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]

    steps:
      - name: üì• Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: üêç Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: üì¶ Create cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: üì¶ Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev CI=true VERBOSE=true

      - name: üèÉ Run Formatter
        run: make format CI=true VERBOSE=true

      - name: Detect changed files
        id: changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: üîê Import SSH Key
        if: steps.changed.outputs.changed == 'true'
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo '${{ secrets.SSH_SIGNING_KEY }}' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: ‚öôÔ∏è Configure Git
        if: steps.changed.outputs.changed == 'true'
        run: |
          git config --global user.name ${{ vars.GIT_COMMITTER_NAME }}
          git config --global user.email ${{ vars.GIT_COMMITTER_EMAIL }}
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/id_ed25519
          git config --global commit.gpgsign true

      - name: üì§ Commit & Push Changes
        if: steps.changed.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "refactor: run automatic formatter" --signoff
          git push
