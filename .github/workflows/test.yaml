name: Test Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize, ready_for_review]
  schedule:
    - cron: '14 3 * * *' # Every day at 03:14 UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Pipeline - Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11, 3.12, 3.13]

    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: 📦 Create cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev CI=true VERBOSE=true

      - name: 📂 Create coverage directory
        run: mkdir coverage

      - name: 🏃 Run Tests
        run: make coverage CI=true VERBOSE=true
        env:
          COVERAGE_FILE: coverage/.coverage_${{ matrix.os }}_python_${{ matrix.python-version }}
          CONTEXT: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}

      - name: 🫙 Store tests coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: always()
        with:
          name: coverage_${{ matrix.os }}_python_${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true

  coverage-combine:
    needs: [test]
    if: always()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]

    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: 📦 Create cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev CI=true VERBOSE=true

      - name: 📥 Download coverage files
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
        with:
          merge-multiple: true
          pattern: coverage_*
          path: coverage

      - name: 🏃 Combine coverage files
        run: |
          ls -la coverage
          coverage combine coverage/.coverage_*

      - name: 📊 Generate coverage report
        run: |
          coverage report
          coverage html --show-contexts --title "Coverage for ${{ github.sha }}"

      - name: 🫙 Store coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-html
          path: htmlcov

  # This job does nothing and is only used for the branch protection
  check-all:
    needs: [test]
    if: always()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: ✅ All tests passed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe
        with:
          jobs: ${{ toJSON(needs) }}
